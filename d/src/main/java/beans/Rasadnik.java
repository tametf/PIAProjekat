package beans;
// Generated Jun 2, 2020, 10:56:56 PM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.ejb.Schedule;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Restrictions;
import org.simplejavamail.api.email.Email;
import org.simplejavamail.api.mailer.Mailer;
import org.simplejavamail.email.EmailBuilder;
import org.simplejavamail.mailer.MailerBuilder;
import util.HibernateUtil;

/**
 * Rasadnik generated by hbm2java
 */


             
public class Rasadnik  implements java.io.Serializable {


     private Integer idRasadnika;
     private Poljoprivrednik poljoprivrednik;
     private String naziv;
     private String mesto;
     private int brZasadjenih;
     private Integer brSlobodnih;
     private Integer voda;
     private BigDecimal temperatura;
     private int duzina;
     private int sirina;
     private Set<Magacin> magacins = new HashSet<Magacin>(0);
     private Set<Narudzbine> narudzbines = new HashSet<Narudzbine>(0);
     private List<Sadnicezasadjene> sadniceNove = new ArrayList<Sadnicezasadjene>();
     private String kriticno = "";
 
     private List<SadnicaPom> vp = new ArrayList<SadnicaPom>();
     
     
    

    public Rasadnik() {
    }

	
    public Rasadnik(Poljoprivrednik poljoprivrednik, String naziv, String mesto, int brZasadjenih, int duzina, int sirina) {
        this.poljoprivrednik = poljoprivrednik;
        this.naziv = naziv;
        this.mesto = mesto;
        this.brZasadjenih = brZasadjenih;
        this.duzina = duzina;
        this.sirina = sirina;
    }
    public Rasadnik(Poljoprivrednik poljoprivrednik, String naziv, String mesto, int brZasadjenih, Integer brSlobodnih, Integer voda, BigDecimal temperatura, Set<Magacin> magacins, Set<Narudzbine> narudzbines, int duzina, int sirina) {
       this.poljoprivrednik = poljoprivrednik;
       this.naziv = naziv;
       this.mesto = mesto;
       this.brZasadjenih = brZasadjenih;
       this.brSlobodnih = brSlobodnih;
       this.voda = voda;
       this.temperatura = temperatura;
       this.magacins = magacins;
       this.narudzbines = narudzbines;
       this.duzina = duzina;
       this.sirina = sirina;
    }
   
    public Integer getIdRasadnika() {
        return this.idRasadnika;
    }
    
    public void setIdRasadnika(Integer idRasadnika) {
        this.idRasadnika = idRasadnika;
    }
    public Poljoprivrednik getPoljoprivrednik() {
        return this.poljoprivrednik;
    }
    
    public void setPoljoprivrednik(Poljoprivrednik poljoprivrednik) {
        this.poljoprivrednik = poljoprivrednik;
    }
    public String getNaziv() {
        return this.naziv;
    }
    
    public void setNaziv(String naziv) {
        this.naziv = naziv;
    }
    public String getMesto() {
        return this.mesto;
    }
    
    public void setMesto(String mesto) {
        this.mesto = mesto;
    }
    public int getBrZasadjenih() {
        return this.brZasadjenih;
    }
    
    public void setBrZasadjenih(int brZasadjenih) {
        this.brZasadjenih = brZasadjenih;
    }
    public Integer getBrSlobodnih() {
        return this.brSlobodnih;
    }
    
    public void setBrSlobodnih(Integer brSlobodnih) {
        this.brSlobodnih = brSlobodnih;
    }
    public Integer getVoda() {
        return this.voda;
    }
    
    public void setVoda(Integer voda) {
        this.voda = voda;
    }
    public BigDecimal getTemperatura() {
        return this.temperatura;
    }
    
    public void setTemperatura(BigDecimal temperatura) {
        this.temperatura = temperatura;
    }
    public Set<Magacin> getMagacins() {
        return this.magacins;
    }
    
    public void setMagacins(Set<Magacin> magacins) {
        this.magacins = magacins;
    }
    public Set<Narudzbine> getNarudzbines() {
        return this.narudzbines;
    }
    
    public void setNarudzbines(Set<Narudzbine> narudzbines) {
        this.narudzbines = narudzbines;
    }

    public int getDuzina() {
        return duzina;
    }

    public void setDuzina(int duzina) {
        this.duzina = duzina;
    }

    public int getSirina() {
        return sirina;
    }

    public void setSirina(int sirina) {
        this.sirina = sirina;
    }

    public List<SadnicaPom> getVp() {
        return vp;
    }

    public void setVp(List<SadnicaPom> vp) {
        this.vp = vp;
    }

    public List<Sadnicezasadjene> getSadniceNove() {
        return sadniceNove;
    }

    public void setSadniceNove(List<Sadnicezasadjene> sadniceNove) {
        this.sadniceNove = sadniceNove;
    }

    public String getKriticno() {
        return kriticno;
    }

    public void setKriticno(String kriticno) {
        this.kriticno = kriticno;
    }

   
  

    
    public static List<Rasadnik> dohvatiRasadnikeZaKorisnika(String korIme) {
        List<Rasadnik> rasadnici = new ArrayList<Rasadnik>();
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        rasadnici = session.createCriteria(Rasadnik.class).add(Restrictions.eq("poljoprivrednik.korisnickoImePolj", korIme)).list();
        session.getTransaction().commit();
        session.close();
        return rasadnici;    
    }
    
    
    public static List<Integer> dohvatiIdMagacina(int idRasadnika) {
        int idM = 0;
        List<Integer> idMag = new ArrayList<Integer>();
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        Criteria c = session.createCriteria(Magacin.class);
        List<Magacin> magacini = c.add(Restrictions.eq("rasadnik.idRasadnika", idRasadnika)).list();
        session.getTransaction().commit();
        session.close();
        for(int i = 0; i < magacini.size(); i++) {
            idMag.add(magacini.get(i).getIdMagacina());
        }
       return idMag;
        
    }
    
    
    public static List<Sadnicezasadjene> dohvatiSadnice(int idMagacina) {
        List<Sadnicezasadjene> sadnice = new ArrayList<Sadnicezasadjene>();
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        sadnice = session.createCriteria(Sadnicezasadjene.class).add(Restrictions.eq("magacin.idMagacina", idMagacina)).list();
        session.getTransaction().commit();
        session.close();
        return sadnice;  
    }
    
    
    
    public static List<Sadnicezasadjene> dohvatiSadniceZaKorisnika(Rasadnik ras) {
        List<Integer> idjeviMagacina = dohvatiIdMagacina(ras.idRasadnika);
        List<Sadnicezasadjene> sadnice = new ArrayList<Sadnicezasadjene>();
        for(int i = 0; i < idjeviMagacina.size(); i++) {
            List<Sadnicezasadjene> sz = dohvatiSadnice(idjeviMagacina.get(i));
            for(int  j = 0; j < sz.size(); j++) {
                sadnice.add(sz.get(j));
            }
        }
        Sadnicezasadjene sadnica;
        for(int i = 0; i < sadnice.size()-1; i++) {
            for(int j = i + 1; j < sadnice.size(); j++) {
                if(sadnice.get(i).getRed() > sadnice.get(j).getRed()) {
                   sadnica = sadnice.get(i);
                   sadnice.set(i, sadnice.get(j));
                   sadnice.set(j, sadnica);
                } 
            }
        }
        
         for(int i = 0; i < sadnice.size()-1; i++) {
            for(int j = i + 1; j < sadnice.size(); j++) {
                if((sadnice.get(i).getRed() == sadnice.get(j).getRed()) && (sadnice.get(i).getKolona() > sadnice.get(j).getKolona())) {
                        sadnica = sadnice.get(i);
                        sadnice.set(i, sadnice.get(j));
                        sadnice.set(j, sadnica);
                } 
            }
        }
         return sadnice;
    }
    
    
    
      
    public static void povecajTemperaturu(Rasadnik ras) {
        ras.setTemperatura(ras.getTemperatura().add(BigDecimal.ONE));
        
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        session.update(ras);
        session.getTransaction().commit();
        session.close();
        
    }
    
    public static void smanjiTemperaturu(Rasadnik ras) {
       
        ras.setTemperatura(ras.getTemperatura().subtract(BigDecimal.ONE));
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        session.update(ras);
        session.getTransaction().commit();
        session.close();
    }
    
    public static void dodajVodu(Rasadnik ras) {
       
        ras.setVoda(ras.getVoda()+1);
       
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        session.update(ras);
        session.getTransaction().commit();
        session.close();
    }
    
    public static void smanjiVodu(Rasadnik ras) {
        
        ras.setVoda(ras.getVoda()-1);
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        session.update(ras);
        session.getTransaction().commit();
        session.close();
    }
    
    //@Schedule(hour = "0")
    public void azuriraj() {
     List<Korisnik> korisnici = Korisnik.dohvatiKorisnike();
     for(int i = 0; i < korisnici.size(); i++) {
         List<Rasadnik> rasadnici = Rasadnik.dohvatiRasadnikeZaKorisnika(korisnici.get(i).getKorisnickoIme());
         for(int j = 0; j < rasadnici.size(); j++) {
             rasadnici.get(j).setVoda(rasadnici.get(j).getVoda() - 1);
             rasadnici.get(j).setTemperatura(rasadnici.get(j).getTemperatura().subtract(BigDecimal.ONE.divide(BigDecimal.valueOf(2), BigDecimal.ROUND_HALF_UP)));
         }
     }
    }
    
    
    public static String dohvatiNazivSadnice(Sadnicezasadjene sz) {
        String naziv;        
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        Criteria c = session.createCriteria(Magacin.class);
        Magacin magacin = (Magacin) c.add(Restrictions.eq("idMagacina", sz.getMagacin().getIdMagacina())).uniqueResult();
        naziv=magacin.getOnlineprodavnica().getNaziv();
        session.getTransaction().commit();
        session.close();
       return naziv;
    }
    
     public static String dohvatiNazivProizvodjaca(Sadnicezasadjene sz) {
        String naziv;        
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        Criteria c = session.createCriteria(Magacin.class);
        Magacin magacin = (Magacin) c.add(Restrictions.eq("idMagacina", sz.getMagacin().getIdMagacina())).uniqueResult();
        naziv=magacin.getOnlineprodavnica().getPreduzece().getKorisnickoImePred();
        session.getTransaction().commit();
        session.close();
       return naziv;
    }
     
    public static void dodajRasadnik(Rasadnik rasadnik) {
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        session.save(rasadnik);
        session.getTransaction().commit();
        session.close();
    }
}


