package beans;
// Generated Jun 2, 2020, 10:56:56 PM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Restrictions;
import util.HibernateUtil;

/**
 * Onlineprodavnica generated by hbm2java
 */
public class Onlineprodavnica  implements java.io.Serializable {


     private Integer idProdavnice;
     private Preduzece preduzece;
     private String naziv;
     private String kolicina;
     private String tip;
     private Integer uputstvo;
     private int jedinicnaCena;
     private BigDecimal srednjaOcena;
     private Set<Detalji> detaljis = new HashSet<Detalji>(0);
     private Set<Stavka> stavkas = new HashSet<Stavka>(0);
     private Set<Magacin> magacins = new HashSet<Magacin>(0);
     private int idProizvoda;
     //private Set<Proizvod> proizvods = new HashSet<Proizvod>(0);

    public Onlineprodavnica() {
    }

	
    public Onlineprodavnica(Preduzece preduzece, String naziv, String kolicina, String tip, int jedinicnaCena, BigDecimal srednjaOcena) {
        this.preduzece = preduzece;
        this.naziv = naziv;
        this.kolicina = kolicina;
        this.tip = tip;
        this.jedinicnaCena = jedinicnaCena;
        this.srednjaOcena = srednjaOcena;
    }
    public Onlineprodavnica(Preduzece preduzece, String naziv, String kolicina, String tip, Integer uputstvo, int jedinicnaCena, BigDecimal srednjaOcena, Set<Detalji> detaljis, Set<Stavka> stavkas, Set<Magacin> magacins) {
       this.preduzece = preduzece;
       this.naziv = naziv;
       this.kolicina = kolicina;
       this.tip = tip;
       this.uputstvo = uputstvo;
       this.jedinicnaCena = jedinicnaCena;
       this.srednjaOcena = srednjaOcena;
       this.detaljis = detaljis;
       this.stavkas = stavkas;
       this.magacins = magacins;
    }
   
    public Integer getIdProdavnice() {
        return this.idProdavnice;
    }
    
    public void setIdProdavnice(Integer idProdavnice) {
        this.idProdavnice = idProdavnice;
    }
    public Preduzece getPreduzece() {
        return this.preduzece;
    }
    
    public void setPreduzece(Preduzece preduzece) {
        this.preduzece = preduzece;
    }
    public String getNaziv() {
        return this.naziv;
    }
    
    public void setNaziv(String naziv) {
        this.naziv = naziv;
    }
    public String getKolicina() {
        return this.kolicina;
    }
    
    public void setKolicina(String kolicina) {
        this.kolicina = kolicina;
    }
    public String getTip() {
        return this.tip;
    }
    
    public void setTip(String tip) {
        this.tip = tip;
    }
    public Integer getUputstvo() {
        return this.uputstvo;
    }
    
    public void setUputstvo(Integer uputstvo) {
        this.uputstvo = uputstvo;
    }
    public int getJedinicnaCena() {
        return this.jedinicnaCena;
    }
    
    public void setJedinicnaCena(int jedinicnaCena) {
        this.jedinicnaCena = jedinicnaCena;
    }
    public BigDecimal getSrednjaOcena() {
        return this.srednjaOcena;
    }
    
    public void setSrednjaOcena(BigDecimal srednjaOcena) {
        this.srednjaOcena = srednjaOcena;
    }
    public Set<Detalji> getDetaljis() {
        return this.detaljis;
    }
    
    public void setDetaljis(Set<Detalji> detaljis) {
        this.detaljis = detaljis;
    }
    public Set<Stavka> getStavkas() {
        return this.stavkas;
    }
    
    public void setStavkas(Set<Stavka> stavkas) {
        this.stavkas = stavkas;
    }
    public Set<Magacin> getMagacins() {
        return this.magacins;
    }
    
    public void setMagacins(Set<Magacin> magacins) {
        this.magacins = magacins;
    }

    public int getIdProizvoda() {
        return idProizvoda;
    }

    public void setIdProizvoda(int idProizvoda) {
        this.idProizvoda = idProizvoda;
    }


    public static Onlineprodavnica dohvatiProdavnicuPreparati(int idProdavnice) {
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        Criteria c = session.createCriteria(Onlineprodavnica.class);
        Onlineprodavnica prodavnica = (Onlineprodavnica) c.add(Restrictions.eq("idProdavnice", idProdavnice)).add(Restrictions.eq("tip", "preparat")).uniqueResult();
        session.getTransaction().commit();
        session.close();
       return prodavnica;
    }
    
    public static Onlineprodavnica dohvatiProdavnicuSadnice(int idProdavnice) {
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        Criteria c = session.createCriteria(Onlineprodavnica.class);
        Onlineprodavnica prodavnica = (Onlineprodavnica) c.add(Restrictions.eq("idProdavnice", idProdavnice)).add(Restrictions.eq("tip", "sadnica")).uniqueResult();
        session.getTransaction().commit();
        session.close();
       return prodavnica;
    }
    
    public static void azurirajProdavnicu(Onlineprodavnica pro) {
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        Criteria c = session.createCriteria(Onlineprodavnica.class);
        session.update(pro);
        session.getTransaction().commit();
        session.close();
    }

     public static List<Onlineprodavnica> dohvatiProdavnicu(String nazivPreduzeca) {
        List<Onlineprodavnica> prodavnice = new ArrayList<Onlineprodavnica>();
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        Criteria c = session.createCriteria(Onlineprodavnica.class);
        prodavnice = c.add(Restrictions.eq("preduzece.korisnickoImePred", nazivPreduzeca)).list();
        session.getTransaction().commit();
        session.close();
       return prodavnice;
    }
  
     
     public static void obrisiProdavnicu(Onlineprodavnica op) {
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        session.delete(op);
        session.getTransaction().commit();
        session.close();   
     }
     
     
     public static void dodajProdavnicu(Onlineprodavnica op) {
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        session.save(op);
        session.getTransaction().commit();
        session.close();   
     }
     
     public static int dohvatiId() {
        List<Onlineprodavnica> prodavnice = new ArrayList<Onlineprodavnica>();
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        prodavnice = session.createCriteria(Onlineprodavnica.class).list();
        session.getTransaction();
        int k = 1;
        for(int i = 0; i < prodavnice.size(); i++) {
            /*if(prodavnice.get(i).idProdavnice == k) {
                ++k;
            } else {
                break;
            }*/
            k=prodavnice.get(i).idProdavnice;
        }
        ++k;
        return k;
     }
     
     public static Onlineprodavnica dohvatiProdavnicu(String preduzece, String tip, String nazivProizvoda) {
         
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        Criteria c = session.createCriteria(Onlineprodavnica.class);
        Onlineprodavnica prodavnica = (Onlineprodavnica) c.add(Restrictions.eq("preduzece.korisnickoImePred", preduzece)).add(Restrictions.eq("naziv", nazivProizvoda)).add(Restrictions.eq("tip", tip)).uniqueResult();
        session.getTransaction().commit();
        session.close();
       return prodavnica;
     }
     
     public static Onlineprodavnica dohvatiProdavnicu(String nazivProizvoda, String tipProizvoda) {
        SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        Criteria c = session.createCriteria(Onlineprodavnica.class);
        Onlineprodavnica prodavnica = (Onlineprodavnica) c.add(Restrictions.eq("naziv", nazivProizvoda)).add(Restrictions.eq("tip", tipProizvoda)).uniqueResult();
        session.getTransaction().commit();
        session.close();
        return prodavnica;
     }
     
     
     public static Onlineprodavnica dohvatiProdavnicu(String nazivNovogProizvoda, String tipNovogProizvoda, int cenaNovogProizvoda, int uputstvoNovogProizvoda) {
         SessionFactory sf = HibernateUtil.getSessionFactory();
        Session session = sf.openSession();
        session.beginTransaction();
        Criteria c = session.createCriteria(Onlineprodavnica.class);
        Onlineprodavnica prodavnica = (Onlineprodavnica) c.add(Restrictions.eq("naziv", nazivNovogProizvoda)).add(Restrictions.eq("tip", tipNovogProizvoda)).add(Restrictions.eq("jedinicnaCena", cenaNovogProizvoda)).add(Restrictions.eq("uputstvo", uputstvoNovogProizvoda)).uniqueResult();
        session.getTransaction().commit();
        session.close();
        return prodavnica;
     }
}


